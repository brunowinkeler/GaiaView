name: CI

on:
  push:
  pull_request:

jobs:
  build:
    name: ${{ matrix.os }} â€¢ ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
        build_type: [Release] # add Debug if you want

    env:
      QT_VERSION: '6.9.1'
      BUILD_DIR: build
      CMAKE_BUILD_PARALLEL_LEVEL: 4

    steps:
      - name: Checkout
        uses: actions/checkout@v5  # latest major as of 2025-08
      # Optional but recommended: speed up C/C++ builds
      - name: Enable ccache
        uses: hendrikmuhs/ccache-action@v1.2.18

      - name: Install Ninja
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y ninja-build
      - name: Install Ninja (macOS)
        if: runner.os == 'macOS'
        run: brew install ninja
      - name: Install Ninja (Windows)
        if: runner.os == 'Windows'
        run: choco install ninja -y

      - name: Install Qt ${{ env.QT_VERSION }}
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          cache: true
          install-deps: true         # pulls required X11/GL bits on Ubuntu
          modules: 'qtserialport'    # add others if you use them (e.g., qtcharts)

      - name: Configure
        run: >
          cmake -S . -B ${{ env.BUILD_DIR }}
          -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_C_COMPILER_LAUNCHER=ccache
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCMAKE_PREFIX_PATH="${{ env.QT_ROOT_DIR }}"

      - name: Build
        run: cmake --build ${{ env.BUILD_DIR }} --config ${{ matrix.build_type }} --parallel

      # If you have ctest/gtests, enable this:
      - name: Test
        run: |
          ctest --test-dir ${{ env.BUILD_DIR }} --build-config ${{ matrix.build_type }} --output-on-failure
